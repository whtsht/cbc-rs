LINE_COMMENT = _{ "//" ~ (!"\n" ~ ANY)* }
BLOCK_COMMENT = _{ "/*" ~ (!"*/" ~ ANY)* ~ "*/" }
WHITESPACE = _{ " " | "\t" | "\r" | "\n" }
SP = _{ " " | "\t" }

VOID       = { "void" }
CHAR       = { "char" }
SHORT      = { "short" }
INT        = { "int" }
LONG       = { "long" }
STRUCT     = { "struct" }
UNION      = { "union" }
ENUM       = { "enum" }
STATIC     = { "static" }
EXTERN     = { "extern" }
CONST      = { "const" }
SIGNED     = { "signed" }
UNSIGNED   = { "unsigned" }
IF         = { "if" }
ELSE       = { "else" }
SWITCH     = { "switch" }
CASE       = { "case" }
DEFAULT    = { "default" }
WHILE      = { "while" }
DO         = { "do" }
FOR        = { "for" }
RETURN     = { "return" }
BREAK      = { "break" }
CONTINUE   = { "continue" }
GOTO       = { "goto" }
TYPEDEF    = { "typedef" }
IMPORT     = { "import" }
SIZEOF     = { "sizeof" }

KEYWORD = _{
      VOID
    | CHAR
    | SHORT
    | INT
    | LONG
    | STRUCT
    | UNION
    | ENUM
    | STATIC
    | EXTERN
    | CONST
    | SIGNED
    | UNSIGNED
    | IF
    | ELSE
    | SWITCH
    | CASE
    | DEFAULT
    | WHILE
    | DO
    | FOR
    | RETURN
    | BREAK
    | CONTINUE
    | GOTO
    | TYPEDEF
    | IMPORT
    | SIZEOF
}

INTEGER = @{
      '1'..'9' ~ ('0'..'9')* ~ "U"? ~ "L"?
    | "0" ~ "x" ~ ('0'..'9' | 'a'..'f' | 'A'..'F')+ ~ "U"? ~ "L"?
    | "0" ~ "o" ~ ('0'..'7')+ ~ "U"? ~ "L"?
    | "0" ~ "b" ~ ("0" | "1")+ ~ "U"? ~ "L"?
    | "0" ~ "U"? ~ "L"?
}

IDENTIFIER = @{
    (('a'..'z' | 'A'..'Z' | "_") ~ ('a'..'z' | 'A'..'Z' | "_" | '0'..'9')*)
}

TOKEN = _{
      KEYWORD
    | IDENTIFIER
}

TYPEREF_BASE = {
     VOID
   | CHAR
   | SHORT
   | INT
   | LONG
   | UNSIGNED ~ CHAR
   | UNSIGNED ~ SHORT
   | UNSIGNED ~ INT
   | UNSIGNED ~ LONG
   | STRUCT ~ IDENTIFIER
   | UNION ~ IDENTIFIER
   | IDENTIFIER
}

NAME = { IDENTIFIER }

TYPEREF = { TYPEREF_BASE ~ (
      "[" ~ "]"
    | "[" ~ INTEGER ~ "]"
    | "*"
    | "(" ~ PARAMS ~ ")"
    )*
}

TYPE = { TYPEREF }

PARAM = {
    TYPE ~ NAME
}

FIXED_PARAMS = {
    PARAM ~ ("," ~ PARAM)*
}

PARAMS = {
      VOID
    | FIXED_PARAMS ~ ("," ~ "...")?
}

DEF_VAR = { NAME ~ ";" }

DEF_VAR_LIST = { DEF_VAR* }


CHARACTER = { "'" ~ ASCII_ALPHA ~ "'" }

STRING = { "\"" ~ ASCII_ALPHA* ~ "\""}

PRIMARY = {
      INTEGER
    | CHARACTER
    | STRING
    | IDENTIFIER
    | "(" ~ EXPR ~ ")"
}

UNARY = {
      ("++" | "--") ~ UNARY
    | ("+" | "-" | "!" | "~" | "*" | "&") ~ TERM
    | SIZEOF ~ "(" ~ TYPE ~ ")"
    | SIZEOF ~ UNARY
    | POSTFIX
}

POSTFIX = {
      PRIMARY ~ (
        "++"
      | "--"
      | "." ~ NAME
      | "->" ~ NAME
      | "[" ~ EXPR ~ "]"
      | "(" ~ ARGS ~ ")"
      )*
}

ARGS = {
    EXPR ~ ("," ~ EXPR)*
}

TERM = {
    "(" ~ TYPE ~ ")" ~ TERM | UNARY
}

OPASSIGN_OP = {
      "+="
    | "-="
    | "*="
    | "/="
    | "%="
    | "&="
    | "|="
    | "^="
    | "<<="
    | ">>="
}

EXPR = {
      TERM ~ "=" ~ EXPR
    | TERM ~ OPASSIGN_OP ~ EXPR
    | EXPR10
}

EXPR10 = {
    EXPR9 ~ ("?" ~ EXPR ~ ":" ~ EXPR10)?
}

EXPR9 = {
    EXPR8 ~ ("||" ~ EXPR8)*
}

EXPR8 = {
    EXPR7 ~ ("&&" ~ EXPR7)*
}

EXPR7 = {
    EXPR6 ~ ((">=" | "<=" | ">" | "<" | "==" | "!=") ~ EXPR6)*
}

EXPR6 = {
    EXPR5 ~ ("|" ~ EXPR5)*
}

EXPR5 = {
    EXPR4 ~ ("^" ~ EXPR4)*
}

EXPR4 = {
    EXPR3 ~ ("&" ~ EXPR3)*
}

EXPR3 = {
    EXPR2 ~ ((">>" | "<<") ~ EXPR2)*
}

EXPR2 = {
    EXPR1 ~ (("+" | "-") ~ EXPR1)*
}

EXPR1 = {
    TERM ~ (("*" | "/" | "%") ~ TERM)*
}

STMTS = { STMT* }

STMT = {
      ";"
    | EXPR ~ ";"
    | BLOCK
    | IF_STMT
    | WHILE_STMT
    | DOWHILE_STMT
    | FOR_STMT
    | SWITCH_STMT
    | BREAK_STMT
    | CONTINUE_STMT
    | GOTO_STMT
    | RETURN_STMT
}

BLOCK = {
    "{" ~ DEF_VAR_LIST ~ STMTS ~ "}"
}

IF_STMT = {
    IF ~ "(" ~ EXPR ~ ")" ~ STMT ~ ELSE ~ STMT
}

WHILE_STMT = {
    WHILE ~ "(" ~ EXPR ~ ")" ~ STMT
}

DOWHILE_STMT = {
    DO ~ STMT ~ WHILE ~ "(" ~ EXPR ~ ")" ~ ";"
}

FOR_STMT = {
    FOR ~ "(" ~ EXPR ~ ";" ~ EXPR ~ ";" ~ EXPR ~ ")" ~ STMT
}

SWITCH_STMT = {
    SWITCH ~ "(" ~ EXPR ~ ")" ~ "{" ~ CASE_CLAUSES ~ "}"
}

CASE_CLAUSES = {
    CASE_CLAUSE* ~ DEFAULT_CLAUSE?
}

CASE_CLAUSE = {
    CASES ~ CASE_BODY
}

CASES = {
    (CASE ~ PRIMARY ~ ":")+
}

DEFAULT_CLAUSE = {
    DEFAULT ~ ":" ~ CASE_BODY
}

CASE_BODY = { STMT }

BREAK_STMT = { BREAK ~ ";" }

CONTINUE_STMT = { CONTINUE ~ ";" }

GOTO_STMT = { GOTO ~ IDENTIFIER ~ ";" }

RETURN_STMT = { RETURN ~ ";" }

DEF_FUNCTION = {
    STORAGE ~ TYPEREF ~ NAME ~ "(" ~ PARAMS ~ ")" ~ ";"
}

SLOT = {
    TYPE ~ NAME
}

MEMBER_LIST = {
    "{" ~ (SLOT ~ ";")* ~ "}"
}

DEF_STRUCT = {
    STRUCT ~ NAME ~ MEMBER_LIST
}

DEF_UNION = {
    UNION ~ NAME ~ MEMBER_LIST
}

DEF_TYPE = {
    TYPEDEF ~ TYPEREF ~ IDENTIFIER ~ ";"
}

IMPORT_STATEMENT = @{
    IMPORT ~ SP+ ~ IDENTIFIER ~ ("." ~ IDENTIFIER)* ~ ";"
}

STORAGE = { STATIC? }

FILE = { SOI ~ IDENTIFIER ~ EOI }
